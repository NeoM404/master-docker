---
name: my-test-app
services:
  nginx:
    image: nginx:1.26-alpine
    # image: jonasal/nginx-certbot:5.2.1-nginx1.27.0  # to be used for tls
    restart: always

    ports:
      - 8080:8080
      # - 80:80 # Uses this port to send  back token to let's encrypt
      # - 443:443

    # env_file:
    #   - nginx_certbot.env

    configs:
      - source: nginx_config
        target:  /etc/nginx/nginx.conf # Mount nginx config to a /etc/nginx 
      # - source: nginx_config_tls
      #   target: /etc/nginx/user_config.d/myapp.conf
   
    networks:
      - public
    
    # volumes:
    #   - nginx_secrets:/etc/letsencrypt

    depends_on:
      flask:
        condition: service_healthy
        restart: true

  flask:
    image: admin4neo/flask:latest
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.dev
    # ports:
    #   - 7070:8080
    env_file:
      - dev.env

    secrets:
      - api_key
      - source: api_key
        target: /api_key.txt # copy secret file to a specific folder

    configs:
      - source: my_config
        target: /config-dev-v2.yaml

    environment:
      - APP_VERSION=0.1.0
      - DB_PASSWORD=${DB_PASSWORD:-devops123neo}
      - APP_TOKEN=${APP_TOKEN}
      - FLASK_DEBUG=1 # For running flask in the debug mode for any changes to be synced to the container
      - FLASK_APP=app.py # flask entry point
      - DB_HOST=postgres
      - DB_USER=admin
      - DB_DATABASE=mydb

    volumes:
      - ./config-dev.yaml:/config-dev.yaml
      # - ./my-data:/data # bind mount my-data folder from my local machine to data folder on root
      - flask-data:/data
      - ./../flask-01:/app # Bind mount my app directory
    networks:
      - public # for NGINX
      - private # for PostgreSQL
    depends_on: # Does not check if container if running/ postgress is healthy
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s

  postgres:
    image: postgres:16.3
    restart: always
    # Optionally - all ports are accessible in the network
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB:  mydb
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_pass
    secrets:
      - postgres_pass # Pass our secret for password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - private # Placed database to private network
    
secrets:
  api_key:
    file: api_key.txt
  postgres_pass:
    file: postgress_pass.txt

configs:
  my_config:
    file: config-dev.yaml
  nginx_config:
    file: nginx.conf
  nginx_config_tls:
    file: myapp.conf

volumes:
  flask-data:
  postgres-data:
  nginx_secret:

# For communication between Flask applications(containers) and python 
networks:
  public:
  private:
    driver: bridge
    ipam:
      config:
        - subnet: "10.0.0.0/19"
          gateway: "10.0.0.1"
