---
name: my-test-app
services:
  flask:
    image: admin4neo/flask:latest
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - 7070:8080
    env_file:
      - dev.env

    secrets:
      - api_key
      - source: api_key
        target: /api_key.txt # copy secret file to a specific folder

    configs:
      - source: my_config
        target: /config-dev-v2.yaml

    environment:
      - APP_VERSION=0.1.0
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_TOKEN=${APP_TOKEN}
      - FLASK_DEBUG=1 # For running flask in the debug mode for any changes to be synced to the container
      - FLASK_APP=app.py # flask entry point

    volumes:
      - ./config-dev.yaml:/config-dev.yaml
      # - ./my-data:/data # bind mount my-data folder from my local machine to data folder on root
      - flask-data:/data
      - ./../flask-01:/app # Bind mount my app directory
    networks:
      - private 

  postgres:
    image: postgres:16.3
    # Optionally - all ports are accessible in the network
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB:  mydb
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_pass
    secrets:
      - postgres_pass # Pass our secret for password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - private # Placed database to private network
    
secrets:
  api_key:
    file: api_key.txt
  postgres_pass:
    file: postgress_pass.txt

configs:
  my_config:
    file: config-dev.yaml

volumes:
  flask-data:
  postgres-data:

# For communication between Flask applications(containers) and python 
networks:
  private:
    driver: bridge
    ipam:
      config:
        - subnet: "10.0.0.0/19"
          gateway: "10.0.0.1"
